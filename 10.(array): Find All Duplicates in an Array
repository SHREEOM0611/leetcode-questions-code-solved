// method 1: sorting

    vector<int> findDuplicates(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int n=0;
        vector<int> result;
        for(int i=0;i<nums.size()-1;i++){
            if(nums[i]==nums[i+1]){
                n++;
                result.push_back(nums[i]);
            }
        }
        return result;
    }
    
    
    // using ordered map if present in map then push back to result or else insert in map
    // dont't recommend 
    vector<int> findDuplicates(vector<int>& nums) {
         map<int,int> numbers;
        vector<int> result;
        for(int i=0;i<nums.size();i++){
            if(numbers[nums[i]]){
                result.push_back(nums[i]);
            }else numbers[nums[i]]=1;
        }
        
        
        
        
        return result;
    }
