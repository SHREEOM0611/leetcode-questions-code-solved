// method 1
  void setZeroes(vector<vector<int>>& matrix) {
      int  m=matrix.size();
        int n=matrix[0].size();
        int flag=0;
        set<int> nvec;
        set<int> mvec;
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(matrix[i][j]==0){
                   mvec.insert(i);
                    nvec.insert(j);                   
                }
            }
        }
for(auto it:mvec){
    for(int i=0;i<n;i++){
        matrix[it][i]=0;
    }
}
        
        for(auto it:nvec){
            for(int i=0;i<m;i++){
                matrix[i][it]=0;
            }
        }               
    }
    
    // method 2: constant space
        void setZeroes(vector<vector<int>>& matrix) {
        
        bool isCol=false;
        int Row=matrix.size();
        int Col=matrix[0].size();
        int i,j,k;
        
        for( i=0;i<Row;i++){
            if(matrix[i][0]==0){
                isCol=true;
            }
            
            for(j=1;j<Col;j++){
                if(matrix[i][j]==0){
                    matrix[0][j]=0;
                    matrix[i][0]=0;
                }
            }
        }
        for(i=1;i<Row;i++){
            for(j=1;j<Col;j++){
              if(matrix[i][0]==0 || matrix[0][j]==0){
                  matrix[i][j]=0;
              }
            }
        }
        if(matrix[0][0]==0){
            for(j=0;j<Col;j++){
                matrix[0][j]=0;
            }
        }
        if(isCol){
            for(i=0;i<Row;i++){
                matrix[i][0]=0;
            }
        }
        
             
    }
