// use same approach as 3 sum question.
// sort
// fix two points i=0 to i<n-3 & from i+1 to n-2
// intialise next the two pointer from next & last.
//use conditions for sum of four element =0,>0,<0.
 
 
 vector<vector<int>> fourSum(vector<int>& nums, int target) {
      vector<vector<int>> result;
        int n=nums.size();
        long long t=target;
        
        sort(nums.begin(),nums.end());
        for(int i=0;i<n-3;i++){
           if(i>0 && nums[i]==nums[i-1]){
               continue;
           } 
           
            for(int j=i+1;j<n-2;j++){
                if(j>i+1 &&  nums[j]==nums[j-1] ){
                    continue;
                }
                int k=j+1;
                int l=n-1;
                    long long int sum1 = t - (nums[i]+nums[j]);
                while(k<l){
                    
                long long sum2=nums[k]+nums[l];
                   
                    if(sum1==sum2){
                        result.push_back({nums[i],nums[j],nums[k],nums[l]});
                        
                        while(k<l && nums[k]==nums[k+1]){
                            k++;
                        }
                        while(k<l && nums[l]==nums[l-1]){
                            l--;
                        }
                        
                        k++;
                        l--;
                        
                    }else if(sum2>sum1){
                        l--;
                    }else 
                        k++;
                }
            }
            
           
            }
        
        return result;
    }
